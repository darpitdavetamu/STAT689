{
    "collab_server" : "",
    "contents" : "# Extracting COAD data from TCGA using TCGA2Stat\n# Irina Gaynanova, November22nd, 2017\n\n# Set working directory to the same location as the R script. Adjust as necessary by adding commented directory\n# setwd(\"~/Dropbox/My_Articles/ForStudents/ClassificationMultimodal/Datasets/TCGA-COAD\")\n\n# Package to extract TCGA data\nlibrary(TCGA2STAT)\n# normalized count RNASeq 2 data, not quite counts\nrnaseq.coad <- getTCGA(disease = \"COAD\", data.type = \"RNASeq2\", type = \"RSEM\")\n\n# 20501 by 328\n# normalized read counts miRNA data\nmirna.coad <- getTCGA(disease = \"COAD\", data.type = \"miRNASeq\", type = \"rpmmm\")\n# 705 by 221\n\n#Log-transform rnaseq and mirna\nrna_log <- log2(rnaseq.coad$dat + 1)\nmirna_log <- log2(mirna.coad$dat + 1)\n\n#The fourth series of digits (e.g. 01A or 11A) indicates the tissue type. 01A = primary colon adenocarcinoma; 11A = normal tissue. Only use samples from cancer tissue\n############################################################\n# This correspond to normal tissue, 41 such samples\n# colnames(rna_log)[grep(\"-11A-\", colnames(rna_log))]\n#subset_normal <- (1:ncol(rna_log))[grep(\"-11A-\", colnames(rna_log))]\nsubset_cancer <- (1:ncol(rna_log))[grep(\"-01A-\", colnames(rna_log))]\n#subject_ID_n <- substr(colnames(rna_log)[subset_normal],1,12)\nsubject_ID<- substr(colnames(rna_log)[subset_cancer],1,12)\nrna_log <- rna_log[, subset_cancer]\nsubset_cancer_miRNA <- (1:ncol(mirna_log))[grep(\"-01A-\", colnames(mirna_log))]\nmirna_log <- mirna_log[, subset_cancer_miRNA]\nsubject_mirna <- substr(colnames(mirna_log),1,12)\n\n\n# Filter the data based on zero or close to zero counts\nzero_rna <- apply(rna_log, 1, function(x) sum(x<0.1))\n# zero_mirna <- apply(mirna_log, 1, function(x) sum(x<0.01))\nsubset_rna <- (1:nrow(rna_log))[zero_rna < round(ncol(rna_log)*1/3)]\n# subset_mirna <- (1:nrow(mirna_log))[zero_mirna < round(ncol(mirna_log)*1/3)]\nrna_log <- rna_log[subset_rna, ]\n# mirna_log <- mirna_log[subset_mirna, ]\n\n#Further filter rna data based on sd\nsd_rna <- apply(rna_log, 1, sd)\nsubset_rna <- (1:nrow(rna_log))[sd_rna > 0.5]\nlength(subset_rna)\nrna_log <- rna_log[subset_rna,]\n\n# Connect by platforms and subjects\n#####################################\n# Intersect mRNA and miRNA\nsubject_RNAs <- intersect(subject_ID, subject_mirna) \nlength(subject_RNAs) # 218 which is very nice, essentially all for which I had mirna\n\n# Union mRNA and miRNA\nsubject_union2 <- union(subject_ID, subject_mirna)\nlength(subject_union2)\n\n#################\n# Subtype information from consensus subtypes, reference paper Guinney et al., 2015\nlabels <- read.table(\"~/Dropbox/STAT 689 Project/Data/cms_labels_public_all.txt\", header = T)\ntcga <- labels[labels$dataset==\"tcga\", ]\nlabelpresent <- match(subject_mirna, tcga$sample)\nsubtype <- tcga$CMS_network[labelpresent] #CMS subtypes based on core consensus samples\nsubtype[subtype == \"UNK\"] = NA # Treat unclassified as NA\nsubtype = as.factor(as.character(subtype))\n\n# How many samples are with complete set of data (group + 2 views) versus incomplete\n\n# Missing group, both views are present\nsum(is.na(subtype[(subject_union2 %in% subject_mirna)]))\n\n# Missing group, only RNAseq is present\nsum(is.na(subtype[!(subject_union2 %in% subject_mirna)]))\n\n# Available group, only RNAseq is present\nsum(!is.na(subtype[!(subject_union2 %in% subject_mirna)]))\n\n# Available group and both views\nsum(!is.na(subtype[(subject_union2 %in% subject_mirna)]))\n\n# For the 37 + 51 for which no subtype information, were some of them later classified into one of CMS subtypes? Yes, see below, this can be used for training\nindextest = subject_union2[is.na(subtype)]\nlabel_test = match(indextest, tcga$sample)\nsubtype_test <- tcga[label_test, 5]\nsum(subtype_test %in% c(\"CMS1\", \"CMS2\", \"CMS3\", \"CMS4\"))\nsum(subtype_test == \"NOLBL\", na.rm = T)\n\n# Want to do semi-supervised learning and matching of platforms\n# Create a list matched by subject/group/subtype - for Yunfeng (?)\nX2 = matrix(NA, ncol(rna_log), nrow(mirna_log))\nX2[subject_union2 %in% subject_mirna,] = t(mirna_log)\n\nCOAD <- list(sample = subject_union2, subtype = subtype, subtypeRF = tcga[labelpresent, 5], RNA = t(rna_log), miRNA = X2)\n\nsave(COAD, file = \"~/Documents/博士教学/博三下/TCGA-COAD/Data/STAT689_COAD.Rda\")\n\n\n\n\n",
    "created" : 1520118000518.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "258651365",
    "id" : "6FB9ABEF",
    "lastKnownWriteTime" : 1520198578,
    "last_content_update" : 1520198578732,
    "path" : "~/Documents/博士教学/博三下/TCGA-COAD/R_code/STAT 689/Read_data.R",
    "project_path" : "Read_data.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}